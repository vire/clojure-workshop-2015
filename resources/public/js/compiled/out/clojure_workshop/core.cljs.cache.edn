;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name clojure-workshop.core, :imports nil, :requires {views clojure-workshop.views, clojure-workshop.views clojure-workshop.views, clojure-workshop.subs clojure-workshop.subs, clojure-workshop.handlers clojure-workshop.handlers, re-frame re-frame.core, re-frame.core re-frame.core, reagent.core reagent.core, reagent reagent.core}, :uses nil, :defs {init {:protocol-inline nil, :meta {:arglists (quote ([])), :export true, :end-column 20, :end-line 31, :column 16, :line 31, :file "/home/vire/workspace/tmp/clojure-workshop/src/cljs/clojure_workshop/core.cljs"}, :name clojure-workshop.core/init, :variadic false, :file "src/cljs/clojure_workshop/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, mount-root {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 21, :column 7, :line 21, :file "/home/vire/workspace/tmp/clojure-workshop/src/cljs/clojure_workshop/core.cljs"}, :name clojure-workshop.core/mount-root, :variadic false, :file "src/cljs/clojure_workshop/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, component-w-state {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 24, :end-line 10, :column 7, :line 10, :file "/home/vire/workspace/tmp/clojure-workshop/src/cljs/clojure_workshop/core.cljs"}, :name clojure-workshop.core/component-w-state, :variadic false, :file "src/cljs/clojure_workshop/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, state {:meta {:end-column 11, :end-line 8, :column 6, :line 8, :file "/home/vire/workspace/tmp/clojure-workshop/src/cljs/clojure_workshop/core.cljs"}, :file "src/cljs/clojure_workshop/core.cljs", :line 8, :column 1, :end-line 8, :end-column 11, :test true, :name clojure-workshop.core/state}}, :require-macros nil, :cljs.analyzer/constants {:order [:div :button :on-click :initialize-db], :seen #{:initialize-db :button :on-click :div}}, :doc nil}