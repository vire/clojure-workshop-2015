;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name clojure-workshop.views, :imports nil, :requires {re-frame.core re-frame.core, re-frame re-frame.core}, :uses nil, :defs {my-first-component {:protocol-inline nil, :meta {:arglists (quote ([name])), :end-column 25, :end-line 15, :column 7, :line 15, :file "/home/vire/workspace/tmp/clojure-workshop/src/cljs/clojure_workshop/views.cljs"}, :name clojure-workshop.views/my-first-component, :variadic false, :file "src/cljs/clojure_workshop/views.cljs", :end-column 25, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name])), :test true}, main-panel {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 10, :column 7, :line 10, :file "/home/vire/workspace/tmp/clojure-workshop/src/cljs/clojure_workshop/views.cljs"}, :name clojure-workshop.views/main-panel, :variadic false, :file "src/cljs/clojure_workshop/views.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, dumb-counter {:protocol-inline nil, :meta {:arglists (quote ([count-from-props])), :end-column 19, :end-line 7, :column 7, :line 7, :file "/home/vire/workspace/tmp/clojure-workshop/src/cljs/clojure_workshop/views.cljs"}, :name clojure-workshop.views/dumb-counter, :variadic false, :file "src/cljs/clojure_workshop/views.cljs", :end-column 19, :method-params ([count-from-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([count-from-props])), :test true}, smart-counter {:protocol-inline nil, :meta {:arglists (quote ([state])), :end-column 20, :end-line 4, :column 7, :line 4, :file "/home/vire/workspace/tmp/clojure-workshop/src/cljs/clojure_workshop/views.cljs"}, :name clojure-workshop.views/smart-counter, :variadic false, :file "src/cljs/clojure_workshop/views.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:div :name], :seen #{:name :div}}, :doc nil}